---
import Icon from "astro-icon";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

import ContentSection from "~/components/content-section.astro";

import { getLangFromUrl, useTranslations } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const events = await getCollection("event");

const upcomingEvent = events.find((event) => event.data.upcoming)?.data;
const pastEvents = events.filter(
  (event) => !event.data.upcoming,
);
---

<ContentSection id="the-events">
  <div class="w-full max-w-6xl">
    <h2 class="gradient-text mb-6 font-extrabold tracking-tight text-4xl">
      {t("events.upcoming")}
    </h2>
    {
      !!upcomingEvent ? (
        <div class="mb-4 flex flex-col items-start gap-2 rounded-lg border border-default bg-offset p-6 text-xs sm:text-sm">
          <p class="hidden font-bold text-primary sm:block">
            {upcomingEvent.date}
          </p>
          <p class="font-bold text-primary sm:hidden">{upcomingEvent.date}</p>
          <h3 class="font-bold text-lg sm:text-xl">{upcomingEvent.title}</h3>
          <p class="font-semibold">
            {upcomingEvent.location} |
            <a
              href={upcomingEvent.address.link}
              class="font-medium text-offset"
            >
              {upcomingEvent.address.label}
            </a>
          </p>
          <ul class="my-2">
            <p class="font-bold">Speakers:</p>
            {upcomingEvent.speakers.map(({ name, role, company, social }) => (
              <li class="flex gap-1">
                <>
                  <a href={social}>{name}</a>
                  <span class="hidden sm:block">
                    :: {role} at {company}
                  </span>
                </>
              </li>
            ))}
          </ul>
          <div class="flex w-full flex-col justify-between sm:flex-row">
            <p class="underline">
              <a href={upcomingEvent.link} target="_blank">
                {t("events.more-info")}
              </a>
            </p>
            <div class="flex items-end">
              <p class="text-offset">{t("events.hosted-by")}</p>
              <a href={upcomingEvent.host.link} target="_blank">
                <Image
                  width={100}
                  height={100}
                  src={upcomingEvent.host.logo}
                  loading="eager"
                  alt={`${upcomingEvent.host.name} logo`}
                />
              </a>
            </div>
          </div>
        </div>
      ) : (
        <h2>{t("events.comming-soon")}</h2>
      )
    }
  </div>

  {
    pastEvents.length > 0 ? (
      <Fragment>
        <h2 class="gradient-text mb-6 w-full max-w-6xl font-extrabold tracking-tight text-4xl">
          {t("events.past")}
        </h2>

        <ul class="!mt-2 grid max-w-6xl grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
          {pastEvents.map(({ data: { title, description, link, vod } }) => (
            <li class="flex flex-col items-center gap-4 border border-default bg-offset p-6">
              <p class="text-center font-extrabold text-lg">{title}</p>
              <p class="text-center text-offset text-sm">{description}</p>
              {  }
              <a
                class="flex items-center gap-1 underline text-sm"
                href={vod || link}
                target="_blank"
              >
                <Icon pack="mdi" name="open-in-new" class="h-4" />
                {t(vod ? "events.check-vod" : "events.check-more-info")}
              </a>
            </li>
          ))}
        </ul>
      </Fragment>
    ) : null
  }
</ContentSection>
